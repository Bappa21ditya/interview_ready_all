
vector<int> Solution::solve(vector<int> &A) {
    int n=A.size();
    vector<int>res(n,0);
    int i=0;
    int j=n-1;
    for(int p=n-1;p>=0;p--)
    {
       if(abs(A[i])>abs(A[j]))
       {
          res[p]=A[i]*A[i];
          i++;
       }
       else
       {
         res[p]=(A[j]*A[j]);
         j--;
       }   
    }
   return res;
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int n=nums.size();
        int low=0;
        int high=n-1;
        
        vector<int>v(n);//resutl vector
        int k=n-1;//start traversing for the end of v till 0   
        
        while(low<=high){
            if(abs(nums[low]) > abs(nums[high])){
                v[k--]=nums[low] * nums[low];
                low++;
            }else{
                v[k--]=nums[high] * nums[high];
                high--;
            }
        }
        return v; 
    }
};
