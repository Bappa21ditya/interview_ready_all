/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverse(ListNode* head)
    {
        ListNode* p=head,*q=NULL,*r=NULL;
        while(p!=NULL)
        {
            r=q;
            q=p;
            p=p->next;
            q->next=r;
        }
        return q;
        
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
         l1=reverse(l1);
         l2=reverse(l2);
       int carry=0;
        ListNode* dummy=new ListNode(-1);
        ListNode* curr=dummy;
        while(l1||l2)
        {
            int sum=0;
            if(l1!=NULL)
                sum+=l1->val;
            if(l2!=NULL)
                sum+=l2->val;
            sum+=carry;
            carry=sum/10;
            curr->next=new ListNode(sum%10);
            curr=curr->next;
            if(l1!=NULL)
                l1=l1->next;
            if(l2!=NULL)
                l2=l2->next;
            
        }
       if(carry==1)
       {
           curr->next=new ListNode(1);
           curr=curr->next;
       }
        
   return  reverse(dummy->next);
    }
};
