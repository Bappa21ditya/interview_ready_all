class Solution {
public:
    int minimumMountainRemovals(vector<int>& nums) {
        int n=nums.size();
        vector<int>ls(n,1);
        vector<int>ds(n,1);
      
        
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<i;j++)
            {
                if(nums[i]>nums[j] && ls[i]<ls[j]+1)
                    ls[i]=ls[j]+1;
            }
        }
        for(int i=n-2;i>=0;i--)
        {
            for(int j=n-1;j>i;j--)
            {
                if(nums[i]>nums[j] && ds[i]<ds[j]+1)
                    ds[i]=ds[j]+1;
            }
        }
        // we take it starts from 1th position and if both end mountain tain is present
        int res=0;
        for(int i=1;i<n;i++)
        {
             if(ls[i]>1 && ds[i]>1) {
              res=max(res,ls[i]+ds[i]-1); 
             }
        }
        return n-res;
        
        
        
    }
};
