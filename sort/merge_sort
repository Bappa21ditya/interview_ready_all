#include<bits/stdc++.h>
using namespace std;
//void merge(int a[],int l,int m,int r)
//{
//	int n1=m-l+1;
//	int n2=r-m;
//	int l1[n1];
//	int r1[n2];
//	for(int i=0;i<n1;i++)
//	{
//		l1[i]=a[l+i];
//	}
//	for(int j=0;j<n2;j++)
//	{
//		r1[j]=a[m+1+j];
//	}
//	int k=1;
//	int i=0,j=0;
//	while(i<n1 && j<n2)
//	{
//		if(l1[i]<r1[j])
//		   a[k++]=l1[i++];
//		else
//		  a[k++]=r1[j++];   
//	}
//	while(i<n1)
//	  {
//	  	a[k++]=l1[i++];
//	  }
//	while(j<n2)
//	{
//		a[k++]=r1[j++];
//	  }  
//}
void merge(int arr[], int l, int m, int r){
			
			int n1 = m-l+1 , n2 = r-m;
			
			int left[n1], right[n2];
			
			for(int i = 0 ; i < n1 ; i++)
				left[i] = arr[l+i];
			
			for(int j = 0; j < n2 ; j++)
				right[j] = arr[m+1+j];
			
			int k = l;
			int i = 0, j = 0;
			
			while( i < n1 && j < n2){
				if(left[i] < right[j])
					arr[k++] = left[i++];
				else
					arr[k++] = right[j++];
			}
			
			while(i < n1)
				arr[k++] = left[i++];
			
			while(j < n2)
				arr[k++] = right[j++];
			
		}
void merge_sort(int a[],int l,int r)
{
	if(l<r)
	{
	
	int m=(l+r)/2;
	merge_sort(a,l,m);
	merge_sort(a,m+1,r);
	merge(a,l,m,r);
    }
}

int main()
{
	int n=7;
	int a[n]={4,6,2,1,3,2,0};
	merge_sort(a,0,6);
	for(int i=0;i<7;i++)
	{
		cout<<a[i]<<" ";
	}
}
