class Solution {
public:
     int bs(vector<int>& nums, int target)
     {
        int i=0;
          int j=nums.size()-1;
          int res=-1;
          
          while(i<=j)
          {
            int mid=(i+j)/2;
            if(nums[mid]==target)
            {
                res=mid;
                i=mid+1;
            }
            else if(nums[mid]<target)
            {
                i=mid+1;
            
            }
            else
             j=mid-1;
  
          }
          return res;
     }

      int fs(vector<int>& nums, int target)
     {
           int i=0;
          int j=nums.size()-1;
        int res=-1;
          
          while(i<=j)
          {
            int mid=(i+j)/2;
            
            if(nums[mid]==target)
            {
                res=mid;
                j=mid-1;
            }
            else if(nums[mid]<target)
            {
                i=mid+1;
            }
            else
             j=mid-1;
  
         }
         return res;
     }
    vector<int> searchRange(vector<int>& nums, int target) {
          
         
          vector<int>ans;
          ans.push_back(fs(nums,target));
          ans.push_back(bs(nums,target));
          return ans;
        
    }
};
