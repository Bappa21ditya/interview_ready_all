class Solution {
public:
    vector<int> parent;
    
    int find_parent(int i) {
        if(parent[i] == i)
            return i;
        return parent[i] = find_parent(parent[i]);
    }
    
    void unionn(int i, int j) {
        int y = find_parent(i);
        int x = find_parent(j);
        
        parent[y] = x;
    }
    
    int findCircleNum(vector<vector<int>>& M) {
        int n = M.size();
        int groups=0;
        parent.resize(n);

        for(int i=0;i<n;i++)
            parent[i] = i;
        
        
        for(int i=0;i<n;i++) {
            for(int j=0;j<n;j++) {
                if(M[i][j] == 1)
                    unionn(i,j);
            }
        }
        
        for(int i=0;i<n;i++) {
            if(parent[i] == i)
                groups++;
        }
        
        return groups;
    }
};
