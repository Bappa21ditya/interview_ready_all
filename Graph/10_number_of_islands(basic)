#include<bits/stdc++.h>
using namespace std;
void dfs(vector<vector<char>> &matrix,vector<vector<bool>> &visited,int i,int j,int m,int n)
{
	if(i<0||i>=m || j<0||j>=n)
	   return ;
	if(matrix[i][j]=='0' || visited[i][j]==true)
	  return ;
	  
	visited[i][j]=true;
	dfs(matrix,visited,i+1,j,m,n);
	dfs(matrix,visited,i,j+1,m,n);
	dfs(matrix,visited,i-1,j,m,n);
	dfs(matrix,visited,i,j-1,m,n);
	  
}

int numIslands(vector<vector<char>>& grid) {
	if(grid.empty())
	  return 0;
	  
    int m=grid.size();
	int n=grid[0].size();
	
   vector<vector<bool>>visited(m, vector<bool>(n, false));
   int res=0;
   for(int i=0;i<m;i++)
   {
   	for(int j=0;j<n;j++)
   	{
   		if(grid[i][j]=='1'&& visited[i][j]!=true)
   		{
   			
   			dfs(grid,visited,i,j,m,n);
   			res++;
		   }
   		  
	   }
   }
   return res;
		  
}
int main()
{    vector<vector<char>>grid
{
                     { '1', '1', '0', '0', '1' },
                     { '0', '1', '0', '0', '1' },
                     { '1', '0', '0', '1', '1' },
                     { '0', '0', '0', '0', '0' },
                     { '1', '0', '1', '0', '1' } 
     };
      
	 cout<<numIslands(grid)<<endl; 
}
