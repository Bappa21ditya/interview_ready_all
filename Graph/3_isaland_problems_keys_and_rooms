class Solution {
public:
    void dfs(vector<vector<int>>& rooms,int d,vector<bool>&vis)
    {
        vis[d]=true;
        // for(auto i=0;i<rooms[d].size();i++)
        // {
        //     if(!vis[rooms[d][i]])
        //         dfs(rooms,rooms[d][i],vis);
        // }
        for(auto it=rooms[d].begin();it!=rooms[d].end();it++)
        {
            if(vis[*it]==false)
                dfs(rooms,*it,vis);
        }
    }
    bool canVisitAllRooms(vector<vector<int>>& rooms) {
        int i=0, n=rooms.size();
        vector<bool>vis(n,false);
        dfs(rooms,0,vis);
        for(int i=0;i<n;i++)
        {
            if(!vis[i])
                return false;
        }
        return true;
    }
};
